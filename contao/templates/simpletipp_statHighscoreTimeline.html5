<div class="chartWrapper"><canvas id="highscoreTimeline"></canvas></div>
<ul id="highscoreTimeline-legend" class="chart-legend-user noselect">
<?php foreach($this->data->table as $row): ?>
    <li id="user_<?=$row->username?>"><?=$row->firstname.' '.$row->lastname?></li>
<?php endforeach;?>
</ul>	
<script>
<?php foreach($this->data->table as $row): ?>
	highscoreTimeline['user_<?=$row->username?>'] = [<?=implode(',',$row->highscorePositions)?>];
<?php endforeach;?>

$(document).ready(function() {

	var highscoreColors = [
		"#3366cc","#dc3912","#ff9900","#109618","#990099","#0099c6","#dd4477","#aaaa11","#22aa99","#994499"
	];
	var highscoreChart = new Chart(document.getElementById("highscoreTimeline"), {
	    type: "line",
	    data: {
	        labels: [<?=implode(",", $this->data->labels)?>]
	    },
	    options: {
	        maintainAspectRatio: false,
	        legend: {
	        	position: "bottom",
	            onClick: function(e, legendItem) {
	                var ci = this.chart;
	                var index = legendItem.datasetIndex;
	                var entry = ci.data.datasets[index];
	                if (ci.data.datasets.length === 1) {
	                    // do not remove the last entry
	                    return;
	                }
					$("#highscoreTimeline-legend li#"+entry.id).show();
	                highscoreColors.unshift(legendItem.fillStyle);
	                ci.data.datasets.splice(index, 1);
	                ci.update();
	            }
	        },
	        tooltips: {
	        	enabled: false
	        },
	        scales: {
	            yAxes: [{
	                ticks: {
	                    callback: function (value, index, values) {
	                        return (value === 0) ? "" : ((value * -1) + ".");
	                    },
	                    max: 0,
	                    min: -<?=$this->data->roundedMaximum?>
	                }
	            }]
	        },
			plugins: {
				datalabels: {
					backgroundColor: function(context) {
						return context.dataset.backgroundColor;
					},
					anchor: "start",
					align: "left",
					borderRadius: 4,
					color: 'white',
					font: {
						fontSize: "10px",
						weight: 'normal',
						lineHeight: 1
					},
					formatter: function(value, c){
						var username = (c.dataIndex+1 === c.dataset.data.length) ? " "+c.dataset.label : "";
						return Math.abs(value) + "." + username;
					},
					display: function(context) {
    					return context.dataIndex !== 0; // display labels with an odd index
					}

				}
			}
	    }
	});
	
	$("#highscoreTimeline-legend li").click(function(){
		var $li = $(this),
			label = $li.text(),
			color = highscoreColors.shift();
			
    	if (highscoreChart.data.datasets.map(d => d.label).indexOf(label) !== -1) {
    		return;
    	}
    	
		highscoreChart.data.datasets.push({
			id: this.id,
	        label: label,
	        data: highscoreTimeline[this.id],
	        tension: 0.2,
	        fill: false,
	        backgroundColor: color,
	        borderColor: color
	    });
	    
		highscoreChart.update();
        $li.hide();
	});
	$("#highscoreTimeline-legend li#user_<?=$this->user->username?>").click();
});
</script>